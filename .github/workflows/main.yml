name: main

on:
  pull_request:
  push:
    branches: [main]

jobs:
  pre-commit:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
      - uses: pre-commit/action@v2.0.2

  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Read .nvmrc and pass it on
        run: echo ::set-output name=NVMRC::$(cat .nvmrc)
        id: nvm

      - name: Setup node w/ nvm version
        uses: actions/setup-node@v1
        with:
          node-version: '${{ steps.nvm.outputs.NVMRC }}'

      - name: yarn install w/ cache
        uses: bahmutov/npm-install@v1

      - name: Run tsc build
        run: yarn build

  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Read .nvmrc and pass it on
        run: echo ::set-output name=NVMRC::$(cat .nvmrc)
        id: nvm

      - name: Setup node w/ nvm version
        uses: actions/setup-node@v1
        with:
          node-version: '${{ steps.nvm.outputs.NVMRC }}'

      - name: yarn install w/ cache
        uses: bahmutov/npm-install@v1

      - name: Run ESLint and TSC type check
        run: yarn lint

  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Read .nvmrc and pass it on
        run: echo ::set-output name=NVMRC::$(cat .nvmrc)
        id: nvm

      - name: Setup node w/ nvm version
        uses: actions/setup-node@v1
        with:
          node-version: '${{ steps.nvm.outputs.NVMRC }}'

      - name: Install yarn w/ cache
        uses: bahmutov/npm-install@v1

      - name: Run all tests
        run: yarn lerna run test

  publish:
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    needs: [pre-commit, lint, test]

    steps:
      - name: checkout
        uses: actions/checkout@v2

      - name: Install Packages
        run: yarn install --frozen-lockfile

      - name: Authenticate with Registry
        run: |
          yarn logout
          echo "@slack-wrench:registry=https://registry.npmjs.org/" > .npmrc
          echo "registry=https://registry.npmjs.org/" >> .npmrc
          echo "//registry.npmjs.org/:_authToken=$NPM_TOKEN" >> .npmrc
          npm whoami
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Publish with Lerna
        run: yarn build && yarn lerna:publish --yes
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
